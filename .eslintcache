[{"/Users/chase.wu/Documents/project/react-app/src/App.js":"1","/Users/chase.wu/Documents/project/react-app/src/index.js":"2","/Users/chase.wu/Documents/project/react-app/src/pages/ChartA.js":"3","/Users/chase.wu/Documents/project/react-app/src/pages/ChartB.js":"4","/Users/chase.wu/Documents/project/react-app/src/pages/ChartC.js":"5","/Users/chase.wu/Documents/project/react-app/src/utils.js":"6"},{"size":1683,"mtime":1624441960206,"results":"7","hashOfConfig":"8"},{"size":220,"mtime":1622703558543,"results":"9","hashOfConfig":"8"},{"size":1683,"mtime":1624499465293,"results":"10","hashOfConfig":"8"},{"size":1692,"mtime":1624443450344,"results":"11","hashOfConfig":"8"},{"size":1690,"mtime":1624443202684,"results":"12","hashOfConfig":"8"},{"size":918,"mtime":1624443128568,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"16gpnql",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/chase.wu/Documents/project/react-app/src/App.js",["28"],"import React, { useState, useEffect } from 'react'\n\nimport ChartA from './pages/ChartA'\nimport ChartB from './pages/ChartB'\nimport ChartC from './pages/ChartC'\nimport { handleXData } from './utils'\n\nimport './App.css';\n\nconst WS = new WebSocket('ws://localhost:8080', 'echo-protocol')\n\nconst Router = [{\n    path: '/a',\n    text: '原始11W个点',\n    component: (props) => (<ChartA {...props} />)\n}, {\n    path: '/b',\n    text: '10000个点',\n    component: (props) => (<ChartB {...props} />)\n}, {\n    path: '/c',\n    text: '1000个点',\n    component: (props) => (<ChartC {...props} />)\n}]\n\nconst App = () => {\n    const [path, setPath] = useState(null)\n    const [data, setData] = useState(null)\n\n    useEffect(() => {\n        WS.addEventListener('message', handleWSData)\n        return () => {\n            WS.removeEventListener('message', handleWSData)\n        }\n    }, [])\n\n    const handleWSData = (msg) => {\n        const data = msg.data.split(\" \").filter(item => !!item)\n        setData(data)\n    }\n\n    return (\n        <div className=\"App\">\n            <ul>\n                {Router.map(item => (\n                    <li key={item.path} onClick={() => setPath(item.path)}>\n                        {item.text}\n                    </li>\n                ))}\n            </ul>\n            <button onClick={() => WS.send('begin')}>\n                begin\n            </button>\n            <button onClick={() => WS.send('stop')}>\n                stop\n            </button>\n            <div>\n                {Router.find(item => item.path === path)?.component({\n                    data\n                })}\n            </div>        \n        </div>\n    );\n}\n\nexport default App;\n","/Users/chase.wu/Documents/project/react-app/src/index.js",[],"/Users/chase.wu/Documents/project/react-app/src/pages/ChartA.js",[],"/Users/chase.wu/Documents/project/react-app/src/pages/ChartB.js",[],"/Users/chase.wu/Documents/project/react-app/src/pages/ChartC.js",[],"/Users/chase.wu/Documents/project/react-app/src/utils.js",["29"],"// 处理获得X轴数据\nconst handleXData = (YdataArr, filterLen) => {\n    let newYdata = [...YdataArr]\n    const originLen = YdataArr.length\n    const START = 80e6\n    const END = 108e6\n    let step = 25e3\n\n    if (filterLen && (filterLen < originLen)) {\n        const splitNum = Math.ceil(originLen / filterLen * 2)\n        const newArr = []\n\n        for (let i = 0; i < filterLen; i += 1) {\n            const end = (i + 1) * splitNum\n            const start = i * splitNum\n            const splitArr = newYdata.slice(start, end)\n            if (splitArr.length === 0) {\n                break\n            }\n            newArr.push(Math.max(...splitArr))\n            newArr.push(Math.min(...splitArr))\n        }\n\n        newYdata = newArr\n        step = step * originLen / filterLen\n    }\n\n    return [\n        newYdata.map((_, index) => START + (step * index)),\n        newYdata\n    ]\n}\n\nexport {\n    handleXData\n}",{"ruleId":"30","severity":1,"message":"31","line":6,"column":10,"nodeType":"32","messageId":"33","endLine":6,"endColumn":21},{"ruleId":"30","severity":1,"message":"34","line":6,"column":11,"nodeType":"32","messageId":"33","endLine":6,"endColumn":14},"no-unused-vars","'handleXData' is defined but never used.","Identifier","unusedVar","'END' is assigned a value but never used."]