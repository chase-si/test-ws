[{"/Users/mac/hc/project/test-ws/src/App.js":"1","/Users/mac/hc/project/test-ws/src/pages/ChartC.js":"2","/Users/mac/hc/project/test-ws/src/index.js":"3","/Users/mac/hc/project/test-ws/src/pages/ChartB.js":"4","/Users/mac/hc/project/test-ws/src/pages/ChartA.js":"5","/Users/mac/hc/project/test-ws/src/pages/ChartD.js":"6","/Users/mac/hc/project/test-ws/src/pages/LightningChart.js":"7","/Users/mac/hc/project/test-ws/src/utils.js":"8"},{"size":1842,"mtime":1635936349827,"results":"9","hashOfConfig":"10"},{"size":1778,"mtime":1635997135368,"results":"11","hashOfConfig":"10"},{"size":220,"mtime":1635931995081,"results":"12","hashOfConfig":"10"},{"size":1669,"mtime":1635997116221,"results":"13","hashOfConfig":"10"},{"size":2300,"mtime":1635936813878,"results":"14","hashOfConfig":"10"},{"size":813,"mtime":1635997272234,"results":"15","hashOfConfig":"10"},{"size":1982,"mtime":1636273125027,"results":"16","hashOfConfig":"10"},{"size":918,"mtime":1635931995082,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1rmgmbh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/hc/project/test-ws/src/App.js",["37"],"import React, { useState, useEffect } from 'react'\n\nimport ChartA from './pages/ChartA'\nimport ChartB from './pages/ChartB'\nimport ChartC from './pages/ChartC'\nimport ChartD from './pages/ChartD'\nimport { handleXData } from './utils'\n\nimport './App.css';\n\nconst WS = new WebSocket('ws://localhost:8080', 'echo-protocol')\n\nconst Router = [{\n    path: '/a',\n    text: '原始11W个点',\n    component: (props) => (<ChartA {...props} />)\n}, {\n    path: '/b',\n    text: '10000个点',\n    component: (props) => (<ChartB {...props} />)\n}, {\n    path: '/c',\n    text: '1000个点',\n    component: (props) => (<ChartC {...props} />)\n},\n{\n    path: '/d',\n    text: 'LightningChart 1000个点',\n    component: (props) => (<ChartD {...props} />)\n}]\n\nconst App = () => {\n    const [path, setPath] = useState(null)\n    const [data, setData] = useState(null)\n    \n    useEffect(() => {\n        WS.addEventListener('message', handleWSData)\n        return () => {\n            WS.removeEventListener('message', handleWSData)\n        }\n    }, [])\n\n    const handleWSData = (msg) => {\n        const data = msg.data.split(\",\")\n        setData(data)\n    }\n\n    return (\n        <div className=\"App\">\n            <ul>\n                {Router.map(item => (\n                    <li key={item.path} onClick={() => setPath(item.path)}>\n                        {item.text}\n                    </li>\n                ))}\n            </ul>\n            <button onClick={() => {\n                WS.send('begin')\n            }}>\n                begin\n            </button>\n            <button onClick={() => WS.send('stop')}>\n                stop\n            </button>\n            <div>\n                {Router.find(item => item.path === path)?.component({\n                    data\n                })}\n            </div>        \n        </div>\n    );\n}\n\nexport default App;\n","/Users/mac/hc/project/test-ws/src/pages/ChartC.js",["38"],"/Users/mac/hc/project/test-ws/src/index.js",[],["39","40"],"/Users/mac/hc/project/test-ws/src/pages/ChartB.js",[],"/Users/mac/hc/project/test-ws/src/pages/ChartA.js",["41"],"/Users/mac/hc/project/test-ws/src/pages/ChartD.js",["42"],"/Users/mac/hc/project/test-ws/src/pages/LightningChart.js",["43"],"import { lightningChart, AxisTickStrategies, UIElementBuilders } from '@arction/lcjs'\nimport React, { useRef, useEffect } from 'react'\n\n// https://www.arction.com/lightningchart-js-api-documentation/v3.2.0/classes/chartxy.html#addlineseries\n\nconst formatX = (val) => `${(val / 1e6).toFixed(2)} MHz`;\n\n\nconst LightningChart = (props) => {\n  const { data, id } = props\n  const chartRef = useRef(undefined)\n\n  useEffect(() => {\n    // Create chart, series and any other static components.\n    // NOTE: console log is used to make sure that chart is only created once, even if data is changed!\n    console.log('create chart')\n    const chart = lightningChart().ChartXY({ container: id });\n\n    const axisX = chart.getDefaultAxisX();\n    //axisX.setTickStrategy(AxisTickStrategies.Empty);\n    axisX.setTickStrategy(AxisTickStrategies.Numeric, strategy =>\n      strategy\n      .setMajorFormattingFunction((tickPosition) => formatX(tickPosition))\n      .setMinorFormattingFunction((tickPosition) => formatX(tickPosition))\n    );\n\n    const series = chart.addLineSeries()\n    // Store references to chart components.\n    chartRef.current = { chart, series, axisX }\n\n    // Return function that will destroy the chart when component is unmounted.\n    return () => {\n      // Destroy chart.\n      console.log('destroy chart')\n      chart.dispose()\n      chartRef.current = undefined\n    }\n  }, [id])\n\n  useEffect(() => {\n    if (data) {\n      const components = chartRef.current\n      if (!components) return\n\n      // Set chart data.\n      const { series } = components\n\n      series.clear().add(data);\n      \n      // const step = data.length / 10 ;\n      // for(let i = 0; i < data.length ; i=i+step){\n      //   axisX.addCustomTick(UIElementBuilders.AxisTick)\n      //       .setValue(data[i].x)\n      //       .setTextFormatter(() => formatX(data[i].x)); \n      // }\n    }\n  }, [data, chartRef])\n\n  return <div id={id} className='lightning-chart'></div>\n}\n\nexport default LightningChart\n","/Users/mac/hc/project/test-ws/src/utils.js",["44"],{"ruleId":"45","severity":1,"message":"46","line":7,"column":10,"nodeType":"47","messageId":"48","endLine":7,"endColumn":21},{"ruleId":"49","severity":1,"message":"50","line":41,"column":8,"nodeType":"51","endLine":41,"endColumn":14,"suggestions":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"49","severity":1,"message":"50","line":41,"column":8,"nodeType":"51","endLine":41,"endColumn":14,"suggestions":"57"},{"ruleId":"49","severity":1,"message":"58","line":20,"column":8,"nodeType":"51","endLine":20,"endColumn":14,"suggestions":"59"},{"ruleId":"45","severity":1,"message":"60","line":1,"column":46,"nodeType":"47","messageId":"48","endLine":1,"endColumn":63},{"ruleId":"45","severity":1,"message":"61","line":6,"column":11,"nodeType":"47","messageId":"48","endLine":6,"endColumn":14},"no-unused-vars","'handleXData' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSetOption'. Either include it or remove the dependency array.","ArrayExpression",["62"],"no-native-reassign",["63"],"no-negated-in-lhs",["64"],["65"],"React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["66"],"'UIElementBuilders' is defined but never used.","'END' is assigned a value but never used.",{"desc":"67","fix":"68"},"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"69"},{"desc":"70","fix":"71"},"Update the dependencies array to be: [data, handleSetOption]",{"range":"72","text":"73"},{"range":"74","text":"73"},"Update the dependencies array to be: [count, data]",{"range":"75","text":"76"},[919,925],"[data, handleSetOption]",[944,950],[565,571],"[count, data]"]